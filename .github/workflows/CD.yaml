# 워크플로우의 이름 지정
name: CD

# 해당 workflow가 언제 실행될 것인지에 대한 트리거를 지정
on:
  push:
    branches: [ "**" ] # main branch로 push 될 때 실행됩니다.

env:
  S3_BUCKET_NAME: offroad

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: create application-secret.properties
        run: |
          ## create application-secret.properties
          cd ./src/main/resources

          # application-secret.properties 파일 생성
          touch ./application-secret.properties

          # GitHub-Actions 에서 설정한 값을 application-secret.properties 파일에 쓰기
          echo "${{ secrets.PROPERTIES_APPLICATION }}" >> ./application-secret.properties

      - name: create application.yml
        run: |
          ## create application.yml
          cd ./src/main/resources
          
          # application.yml 파일 생성
          touch ./application.yml 
          
          # GitHub-Actions 에서 설정한 값을 application.yml 파일에 쓰기
          # 여기선 CD_APPLICATION
          echo "${{ secrets.CD_APPLICATION }}" >> ./application.yml

        shell: bash

      - name: build
        run: |
          chmod +x gradlew
          ./gradlew build -x test
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle # 실제 application build(-x 옵션을 통해 test는 제외)
        run: ./gradlew build -x test

      - name: Make Directory
        run: mkdir -p deploy

      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy

      - name: Copy appspec.yml
        run: cp appspec.yml ./deploy

      - name: Copy script
        run: cp ./scripts/*.sh ./deploy

      - name: Make zip file
        run: zip -r ./offroad.zip ./deploy
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./offroad.zip s3://$S3_BUCKET_NAME/

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        run:
          aws deploy create-deployment
          --application-name offroad-deploy
          --deployment-group-name offroad-deploy
          --file-exists-behavior OVERWRITE
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=offroad.zip
          --region ap-northeast-2